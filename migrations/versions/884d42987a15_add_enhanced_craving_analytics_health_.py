"""Add enhanced craving analytics, health impact, flexible goals, and predictive models

Revision ID: 884d42987a15
Revises: c77fe9364d1b
Create Date: 2025-08-11 20:49:03.775439

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '884d42987a15'
down_revision = 'c77fe9364d1b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('goal_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('template_config', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('craving',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('craving_time', sa.DateTime(), nullable=False),
    sa.Column('intensity', sa.Integer(), nullable=False),
    sa.Column('trigger', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('physical_symptoms', sa.Text(), nullable=True),
    sa.Column('situation_context', sa.Text(), nullable=True),
    sa.Column('outcome', sa.String(length=50), nullable=True),
    sa.Column('outcome_notes', sa.Text(), nullable=True),
    sa.Column('mood_before', sa.Integer(), nullable=True),
    sa.Column('mood_after', sa.Integer(), nullable=True),
    sa.Column('stress_level', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('craving_predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('prediction_date', sa.Date(), nullable=False),
    sa.Column('prediction_hour', sa.Integer(), nullable=True),
    sa.Column('risk_score', sa.Float(), nullable=False),
    sa.Column('confidence_level', sa.Float(), nullable=True),
    sa.Column('risk_factors', sa.Text(), nullable=True),
    sa.Column('actual_craving_occurred', sa.Boolean(), nullable=True),
    sa.Column('actual_craving_intensity', sa.Integer(), nullable=True),
    sa.Column('prediction_accuracy', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flexible_goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('goal_type', sa.String(length=50), nullable=False),
    sa.Column('target_value', sa.Float(), nullable=False),
    sa.Column('current_value', sa.Float(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('frequency', sa.String(length=20), nullable=True),
    sa.Column('initial_target', sa.Float(), nullable=True),
    sa.Column('reduction_rate', sa.Float(), nullable=True),
    sa.Column('reduction_frequency', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('current_streak', sa.Integer(), nullable=True),
    sa.Column('best_streak', sa.Integer(), nullable=True),
    sa.Column('success_count', sa.Integer(), nullable=True),
    sa.Column('attempt_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['goal_templates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('health_impacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('baseline_daily_cost', sa.Float(), nullable=True),
    sa.Column('current_daily_cost', sa.Float(), nullable=True),
    sa.Column('total_money_saved', sa.Float(), nullable=True),
    sa.Column('quit_date', sa.Date(), nullable=True),
    sa.Column('reduction_start_date', sa.Date(), nullable=True),
    sa.Column('circulation_improved', sa.Boolean(), nullable=True),
    sa.Column('taste_smell_improved', sa.Boolean(), nullable=True),
    sa.Column('lung_function_improved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_patterns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('pattern_type', sa.String(length=50), nullable=False),
    sa.Column('pattern_name', sa.String(length=100), nullable=True),
    sa.Column('pattern_data', sa.Text(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('sample_size', sa.Integer(), nullable=True),
    sa.Column('last_occurrence', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_patterns')
    op.drop_table('health_impacts')
    op.drop_table('flexible_goals')
    op.drop_table('craving_predictions')
    op.drop_table('craving')
    op.drop_table('goal_templates')
    # ### end Alembic commands ###
